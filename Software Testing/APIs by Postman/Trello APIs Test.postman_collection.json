{
	"info": {
		"_postman_id": "a721a253-0b42-4e1f-bbfb-b3e89ad60af3",
		"name": "Trello APIs Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40973241"
	},
	"item": [
		{
			"name": "CreateBoard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Board creation status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Board creation response time is less than 1s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct create board response\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Test Board\");\r",
							"    pm.expect(jsonData.desc).to.eql(\"TrelloAPIsTest\");\r",
							"\r",
							"    pm.environment.set(\"boardID\", jsonData.id);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}1/boards/?name=Test Board&key={{apiKey}}&token={{token}}&desc=TrelloAPIsTest",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "Test Board"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "desc",
							"value": "TrelloAPIsTest"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateBoard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Board update status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Board update response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct update board response\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.desc).to.eql(\"UpdateTheBoard\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}1/boards/{{boardID}}?key={{apiKey}}&token={{token}}&desc=UpdateTheBoard",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"boards",
						"{{boardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "desc",
							"value": "UpdateTheBoard"
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBoard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"The board is existing\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check board time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}1/boards/{{boardID}}?key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"boards",
						"{{boardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"List Creation status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List Creation response time is less than 1s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"List1\");\r",
							"    \r",
							"    pm.environment.set(\"listID\", jsonData.id);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}1/lists?name=List1&idBoard={{boardID}}&key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "List1"
						},
						{
							"key": "idBoard",
							"value": "{{boardID}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"List update status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"List update rsponse time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct update board response\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"UpdatedList\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}1/lists/{{listID}}}}?key={{apiKey}}&token={{token}}&name=UpdatedList",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"lists",
						"{{listID}}}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "UpdatedList"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"The list is existing\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check list response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}1/lists/{{listID}}?key={{apiKey}}&token={{token}}&fields=all",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"lists",
						"{{listID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "fields",
							"value": "all"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateCard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Card Creation status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Card Creation response time is less than 1s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Card1\");\r",
							"    pm.expect(jsonData.desc).to.eql(\"TestCard1\");\r",
							"\r",
							"    pm.environment.set(\"cardID\", jsonData.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}1/cards?idList={{listID}}&key={{apiKey}}&token={{token}}&name=Card1&desc=TestCard1",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{listID}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "Card1"
						},
						{
							"key": "desc",
							"value": "TestCard1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateCard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Card update status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Card update response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Correct update board response\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.desc).to.eql(\"UpdateTheCard1\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{baseURL}}1/cards/{{cardID}}?key={{apiKey}}&token={{token}}&desc=UpdateTheCard1",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"cards",
						"{{cardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "desc",
							"value": "UpdateTheCard1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetCard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"The card is existing\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check the card response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}1/cards/{{cardID}}?key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"cards",
						"{{cardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateChicklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Chicklist creation status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Chicklist creation response time is less than 1s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"CreateChicklist\");\r",
							"\r",
							"    pm.environment.set(\"chicklistID\", jsonData.id);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseURL}}1/checklists?idCard={{cardID}}&key={{apiKey}}&token={{token}}&name=CreateChicklist",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{cardID}}"
						},
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "CreateChicklist"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateChicklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Update chicklist status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Update chicklist response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"UpdatedCard1Name\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}1/checklists/{{chicklistID}}?key={{apiKey}}&token={{token}}&name=UpdatedCard1Name",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"checklists",
						"{{chicklistID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "UpdatedCard1Name"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetChecklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Chicklist is existing\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Get Chicklist response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL}}1/checklists/{{chicklistID}}?key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"checklists",
						"{{chicklistID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteChecklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Checklist delete status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Checklist delete response time is less than 1s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}1/checklists/{{chicklistID}}?key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"checklists",
						"{{chicklistID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteCard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Card delete status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Card delete response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}1/cards/{id}?key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"cards",
						"{id}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ArchiveList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Archive the list status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Archive the list response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{baseURL}}1/lists/{{listID}}/closed?key={{apiKey}}&token={{token}}&value=true",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"lists",
						"{{listID}}",
						"closed"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "value",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteBoard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Board Delete status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Board Delete response time is less than 1s\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}1/boards/{{boardID}}?key={{apiKey}}&token={{token}}",
					"host": [
						"{{baseURL}}1"
					],
					"path": [
						"boards",
						"{{boardID}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{apiKey}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	]
}